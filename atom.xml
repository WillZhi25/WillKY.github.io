<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Will 的博客</title>
  <icon>https://www.gravatar.com/avatar/305411b99633e3126075909776d7c2ea</icon>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://willky.github.io/"/>
  <updated>2021-06-23T02:11:24.047Z</updated>
  <id>https://willky.github.io/</id>
  
  <author>
    <name>Will</name>
    <email>245666044@qq.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>mongodb 使用</title>
    <link href="https://willky.github.io/2021/05/08/Mongodb%20%E5%88%9D%E4%BD%BF%E7%94%A8/"/>
    <id>https://willky.github.io/2021/05/08/Mongodb 初使用/</id>
    <published>2021-05-08T14:37:46.000Z</published>
    <updated>2021-06-23T02:11:24.047Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>目前已经有部份业务开始使用mongodb 作为存储方式，为了方便大家后续使用故此写下一些经验总结.</p><h1 id="一、maven-导入"><a href="#一、maven-导入" class="headerlink" title="一、maven 导入"></a>一、maven 导入</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- mongodb start --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-starter-data-mongodb&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;!-- mongodb end --&gt;</span><br></pre></td></tr></table></figure><h1 id="二、配置"><a href="#二、配置" class="headerlink" title="二、配置"></a>二、配置</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">spring:</span><br><span class="line">  data:</span><br><span class="line">    mongodb:</span><br><span class="line">      uri: mongodb://192.168.1.29:27017/pp_data</span><br></pre></td></tr></table></figure><h1 id="三、代码示例"><a href="#三、代码示例" class="headerlink" title="三、代码示例"></a>三、代码示例</h1><p>1、Bean 类注入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">@Autowired</span><br><span class="line">private MongoTemplate mongoTemplate;</span><br></pre></td></tr></table></figure><ol start="2"><li>新增</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongoTemplate.insert(entity);</span><br></pre></td></tr></table></figure><ol start="3"><li>更新或新增</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">// 条件</span><br><span class="line">Query query = new Query();</span><br><span class="line">query.addCriteria(Criteria.where(&quot;userId&quot;).is(item.getUserId()));</span><br><span class="line">query.addCriteria(Criteria.where(&quot;date&quot;).is(date));</span><br><span class="line">// 需要更新或者插入的数据</span><br><span class="line">Update update = new Update();</span><br><span class="line">update.set(&quot;sysUpdateTime&quot;, TimeUtils.getCurrentTimeOfMilli());</span><br><span class="line">// 执行</span><br><span class="line">mongoTemplate.upsert(query, update, BuyerTagsEntity.class);</span><br></pre></td></tr></table></figure><ol start="4"><li>更新一条记录/多条记录</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">String date = TimeUtil.getDate(0);</span><br><span class="line">// 条件组装</span><br><span class="line">Query query = new Query();</span><br><span class="line">query.addCriteria(Criteria.where(&quot;userId&quot;).is(userId));</span><br><span class="line">query.addCriteria(Criteria.where(&quot;ymd&quot;).is(Integer.parseInt(date)));</span><br><span class="line"></span><br><span class="line">Update update = new Update();</span><br><span class="line">// 对list 批量更新</span><br><span class="line">Update.PushOperatorBuilder pushOperatorBuilder = update.push(&quot;goodsIdList&quot;);</span><br><span class="line">pushOperatorBuilder.each(goodsIdList.toArray(new Long[0]));</span><br><span class="line">// 更新某个字段</span><br><span class="line">update.set(&quot;sysUpdateTime&quot;, TimeUtils.getCurrentTimeOfMilli());</span><br><span class="line">// 只更新一条</span><br><span class="line">mongoTemplate.updateFirst(query, update, AiRecGoodsDistanceRecordEntity.class);</span><br><span class="line">// 更新多条</span><br><span class="line">mongoTemplate.updateMulti(query, update, AiRecGoodsDistanceRecordEntity.class);</span><br></pre></td></tr></table></figure><ol start="5"><li>删除</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Query query = new Query();</span><br><span class="line">query.addCriteria(Criteria.where(&quot;date&quot;).is(date));</span><br><span class="line">mongoTemplate.remove(query, BuyerTagsEntity.class);</span><br></pre></td></tr></table></figure><ol start="6"><li>对list 字段内容进行删除</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">String date = TimeUtil.getDate(0);</span><br><span class="line">Query query = new Query();</span><br><span class="line">query.addCriteria(Criteria.where(&quot;userId&quot;).is(userId));</span><br><span class="line">query.addCriteria(Criteria.where(&quot;ymd&quot;).is(Integer.parseInt(date)));</span><br><span class="line"></span><br><span class="line">Update update = new Update()</span><br><span class="line">// 要删除的数据</span><br><span class="line">        .pullAll(&quot;goodsIdList&quot;, goodsIdList.toArray(new Long[0]))</span><br><span class="line">        .set(&quot;sysUpdateTime&quot;, TimeUtils.getCurrentTimeOfMilli());</span><br><span class="line"></span><br><span class="line">mongoTemplate.updateFirst(query, update, AiRecGoodsDistanceRecordEntity.class);</span><br></pre></td></tr></table></figure><p>7.对单个嵌套文档进行更新（注：这种写法只会更新嵌套文档的第一个。建议用8）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">// 查询条件</span><br><span class="line">Query query = new Query();</span><br><span class="line">query.addCriteria(</span><br><span class="line">        Criteria.where(&quot;userId&quot;).is(userId)</span><br><span class="line">                .and(&quot;storeId&quot;).is(storeId)</span><br><span class="line">                // 嵌套文档查询条件</span><br><span class="line">                .and(&quot;goodsInfoList.status&quot;).is(beforeStatus)</span><br><span class="line">                .and(&quot;goodsInfoList.txId&quot;).is(beforeTxId)</span><br><span class="line">                .and(&quot;goodsInfoList.branchId&quot;).is(beforeBranchId)</span><br><span class="line">                .and(&quot;goodsInfoList.goodsId&quot;).is(goodsId)</span><br><span class="line">);</span><br><span class="line">CartInfoEntity one = mongoTemplate.findOne(query, CartInfoEntity.class);</span><br><span class="line">// 更新内容</span><br><span class="line">Update update = new Update()</span><br><span class="line">        // 所有内嵌文档更新</span><br><span class="line">        .set(&quot;goodsInfoList.$.txId&quot;, txId)</span><br><span class="line">        .set(&quot;goodsInfoList.$.branchId&quot;, branchId)</span><br><span class="line">        .set(&quot;goodsInfoList.$.status&quot;, afterStatus)</span><br><span class="line">        .set(&quot;sysUpdateTime&quot;, TimeUtils.getCurrentTimeOfMilli());</span><br><span class="line">UpdateResult updateResult = mongoTemplate.updateMulti(query, update, CartInfoEntity.class);</span><br></pre></td></tr></table></figure><p>8.对多个嵌套文档并过滤进行更新</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">// 查询条件</span><br><span class="line">Bson filtersBson = Filters.and(</span><br><span class="line">        Filters.eq(&quot;userId&quot;, cartGoodsDeleteQuery.getUserId()),</span><br><span class="line">        // 嵌套文档的字段写法</span><br><span class="line">        Filters.eq(&quot;goodsInfoList.status&quot;, CartGoodsInfoStatusEnums.NORMAL.getCode()),</span><br><span class="line">        Filters.eq(&quot;goodsInfoList.txId&quot;, 0L),</span><br><span class="line">        Filters.eq(&quot;goodsInfoList.branchId&quot;, 0L),</span><br><span class="line">        Filters.in(&quot;goodsInfoList.goodsId&quot;, cartGoodsDeleteQuery.getGoodsIds())</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">// 更新内容</span><br><span class="line">Bson updatesBsonList = Updates.combine(</span><br><span class="line">        // 内嵌文档循环别名 “e”</span><br><span class="line">        Updates.set(&quot;goodsInfoList.$[e].txId&quot;, cartGoodsDeleteQuery.getTxId()),</span><br><span class="line">        Updates.set(&quot;goodsInfoList.$[e].branchId&quot;, cartGoodsDeleteQuery.getBranchId()),</span><br><span class="line">        Updates.set(&quot;goodsInfoList.$[e].status&quot;, cartGoodsDeleteQuery.getChangeStatus()),</span><br><span class="line">        Updates.set(&quot;sysUpdateTime&quot;, TimeUtils.getCurrentTimeOfMilli())</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">// 相当于where条件，goodsId在这个列表内才更新</span><br><span class="line">UpdateOptions arrayFiltersBsonList = new UpdateOptions().arrayFilters(</span><br><span class="line">        Collections.singletonList(</span><br><span class="line">                // 存在该goodsId的内嵌文档才进行更新</span><br><span class="line">                Filters.in(&quot;e.goodsId&quot;, cartGoodsDeleteQuery.getGoodsIds())</span><br><span class="line">        )</span><br><span class="line">);</span><br><span class="line">// 更新多个</span><br><span class="line">UpdateResult updateResult = getCollectionDocument().updateMany(filtersBson, updatesBsonList, arrayFiltersBsonList);</span><br></pre></td></tr></table></figure><h1 id="四、索引"><a href="#四、索引" class="headerlink" title="四、索引"></a>四、索引</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">@Data</span><br><span class="line">@Document(collection = MongodbConstant.COLLECTION_TAGS_BUYER_TAGS)</span><br><span class="line">@CompoundIndexes(&#123;</span><br><span class="line">        @CompoundIndex(name = &quot;idx_user_date&quot;, def = &quot;&#123;&apos;userId&apos;: -1, &apos;date&apos;: -1&#125;&quot;)// 联合索引</span><br><span class="line">        // @CompoundIndex(name = &quot;idx_user&quot;, def = &quot;&#123;&apos;userId&apos;: -1&#125;&quot;, unique = true)// 唯一索引</span><br><span class="line">&#125;)</span><br><span class="line">public class BuyerTagsEntity implements Serializable &#123;</span><br><span class="line"></span><br><span class="line">    private static final long serialVersionUID = 4186877053555563977L;</span><br><span class="line">    @Id</span><br><span class="line">    private String id;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 用户id</span><br><span class="line">     */</span><br><span class="line">    @Indexed(name = &quot;idx_user_id&quot;, unique = true) // 唯一索引</span><br><span class="line">    private Long userId;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 时间</span><br><span class="line">     */</span><br><span class="line">    @Indexed(name = &quot;idx_date&quot;) // 单字段索引</span><br><span class="line">    private String date;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 标签</span><br><span class="line">     */</span><br><span class="line">    private List&lt;String&gt; tags;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 更新时间</span><br><span class="line">     */</span><br><span class="line">    private Long sysUpdateTime;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;目前已经有部份业务开始使用mongodb 作为存储方式，为了方便大家后续使用故此写下一些经验总结.&lt;/p&gt;
&lt;h1 id=&quot;一、maven-
      
    
    </summary>
    
    
      <category term="spring boot" scheme="https://willky.github.io/tags/spring-boot/"/>
    
      <category term="mvn" scheme="https://willky.github.io/tags/mvn/"/>
    
      <category term="mongodb" scheme="https://willky.github.io/tags/mongodb/"/>
    
  </entry>
  
  <entry>
    <title>ES 修改 max_result_window</title>
    <link href="https://willky.github.io/2021/02/05/ES%20%E4%BF%AE%E6%94%B9%20max_result_window/"/>
    <id>https://willky.github.io/2021/02/05/ES 修改 max_result_window/</id>
    <published>2021-02-05T01:23:19.000Z</published>
    <updated>2021-08-12T06:19:47.269Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、-问题"><a href="#一、-问题" class="headerlink" title="一、 问题"></a>一、 问题</h1><p>默认情况下，当查询条数超出10000时，es 就会报错</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Result window is too large, from + size must be less than or equal to: [10000] but was xx</span><br></pre></td></tr></table></figure><h1 id="二、解决方案"><a href="#二、解决方案" class="headerlink" title="二、解决方案"></a>二、解决方案</h1><p>执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">PUT index_name/_settings</span><br><span class="line">&#123;</span><br><span class="line">  &quot;index&quot;:&#123;</span><br><span class="line">    &quot;max_result_window&quot;:1000000</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>成功后返回<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;acknowledged&quot; : true</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;一、-问题&quot;&gt;&lt;a href=&quot;#一、-问题&quot; class=&quot;headerlink&quot; title=&quot;一、 问题&quot;&gt;&lt;/a&gt;一、 问题&lt;/h1&gt;&lt;p&gt;默认情况下，当查询条数超出10000时，es 就会报错&lt;/p&gt;
&lt;figure class=&quot;highlight p
      
    
    </summary>
    
    
      <category term="elasticsearch" scheme="https://willky.github.io/tags/elasticsearch/"/>
    
      <category term="max_result_window" scheme="https://willky.github.io/tags/max-result-window/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot 集成Hbase 报错</title>
    <link href="https://willky.github.io/2020/12/08/SpringBoot%E9%9B%86%E6%88%90Hbase%E6%8A%A5%E9%94%99/"/>
    <id>https://willky.github.io/2020/12/08/SpringBoot集成Hbase报错/</id>
    <published>2020-12-08T14:37:46.000Z</published>
    <updated>2020-12-09T16:21:42.512Z</updated>
    
    <content type="html"><![CDATA[<p>集成的hbase-client版本号为1.2.3时，会报以下错误:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">org.apache.hadoop.hbase.DoNotRetryIOException: java.lang.IllegalAccessError: tried to access method com.google.common.base.Stopwatch.&lt;init&gt;()V from <span class="class"><span class="keyword">class</span> <span class="title">org</span>.<span class="title">apache</span>.<span class="title">hadoop</span>.<span class="title">hbase</span>.<span class="title">zookeeper</span>.<span class="title">MetaTableLocator</span></span></span><br></pre></td></tr></table></figure><p>可以通过升级版本解决, 最终采用1.3.0版本解决</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.hbase<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hbase-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;集成的hbase-client版本号为1.2.3时，会报以下错误:&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/
      
    
    </summary>
    
    
      <category term="spring boot" scheme="https://willky.github.io/tags/spring-boot/"/>
    
      <category term="hbase" scheme="https://willky.github.io/tags/hbase/"/>
    
      <category term="mvn" scheme="https://willky.github.io/tags/mvn/"/>
    
  </entry>
  
  <entry>
    <title>ES常用聚合查询</title>
    <link href="https://willky.github.io/2020/12/05/ES%E5%B8%B8%E7%94%A8%E8%81%9A%E5%90%88%E6%9F%A5%E8%AF%A2/"/>
    <id>https://willky.github.io/2020/12/05/ES常用聚合查询/</id>
    <published>2020-12-05T11:13:59.000Z</published>
    <updated>2021-06-23T02:11:36.262Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、-问题"><a href="#一、-问题" class="headerlink" title="一、 问题"></a>一、 问题</h1><p>在数据库查询中，我们经常使用到一些统计查询如count、sum， 以及有时候会使用到group by 查询， 那么在elastic search 中如果去实现这些功能呢？下面来带大家看一下</p><h1 id="二、aggs的使用"><a href="#二、aggs的使用" class="headerlink" title="二、aggs的使用"></a>二、aggs的使用</h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;一、-问题&quot;&gt;&lt;a href=&quot;#一、-问题&quot; class=&quot;headerlink&quot; title=&quot;一、 问题&quot;&gt;&lt;/a&gt;一、 问题&lt;/h1&gt;&lt;p&gt;在数据库查询中，我们经常使用到一些统计查询如count、sum， 以及有时候会使用到group by 查询， 那么在
      
    
    </summary>
    
    
      <category term="elasticsearch" scheme="https://willky.github.io/tags/elasticsearch/"/>
    
      <category term="es" scheme="https://willky.github.io/tags/es/"/>
    
      <category term="group by" scheme="https://willky.github.io/tags/group-by/"/>
    
      <category term="sum" scheme="https://willky.github.io/tags/sum/"/>
    
      <category term="聚合查询" scheme="https://willky.github.io/tags/%E8%81%9A%E5%90%88%E6%9F%A5%E8%AF%A2/"/>
    
  </entry>
  
  <entry>
    <title>ES查看分数及进行修改</title>
    <link href="https://willky.github.io/2020/08/05/ES%E6%9F%A5%E7%9C%8B%E5%88%86%E6%95%B0%E5%8F%8A%E8%BF%9B%E8%A1%8C%E4%BF%AE%E6%94%B9/"/>
    <id>https://willky.github.io/2020/08/05/ES查看分数及进行修改/</id>
    <published>2020-08-05T08:13:59.000Z</published>
    <updated>2020-12-18T16:04:37.467Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、查看分数组成"><a href="#一、查看分数组成" class="headerlink" title="一、查看分数组成"></a>一、查看分数组成</h2><p>通过修改dsl 可以查看到文档的最终得分以及计算方法，如下:</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">GET test_index/_search</span><br><span class="line">&#123;</span><br><span class="line">  "explain": true, // 添加explain 可以文档结果中看到分数的计算过程</span><br><span class="line">  "query": &#123;</span><br><span class="line">    "match": &#123;</span><br><span class="line">      "description": "测试"</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>查询得到以下结果:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"_shard"</span>:<span class="string">"xxxx"</span>,</span><br><span class="line">    <span class="attr">"_node"</span>:<span class="string">"Bxi8bvjXR3GFO2NdCsGmXQ"</span>,</span><br><span class="line">    <span class="attr">"_index"</span>:<span class="string">"xxxx"</span>,</span><br><span class="line">    <span class="attr">"_type"</span>:<span class="string">"_doc"</span>,</span><br><span class="line">    <span class="attr">"_id"</span>:<span class="string">"3802"</span>,</span><br><span class="line">    <span class="attr">"_score"</span>:<span class="number">7.1130733</span>,</span><br><span class="line">    <span class="attr">"_source"</span>:&#123;</span><br><span class="line">        <span class="attr">"goods_id"</span>:<span class="number">3802</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"_explanation"</span>:&#123;</span><br><span class="line">        <span class="attr">"value"</span>:<span class="number">7.1130733</span>,</span><br><span class="line">        <span class="attr">"description"</span>:<span class="string">"sum of:"</span>,</span><br><span class="line">        <span class="attr">"details"</span>:[</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">"value"</span>:<span class="number">3.549871</span>,</span><br><span class="line">                <span class="attr">"description"</span>:<span class="string">"weight(description:测 in 325) [PerFieldSimilarity], result of:"</span>,</span><br><span class="line">                <span class="attr">"details"</span>:[</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">"value"</span>:<span class="number">3.549871</span>,</span><br><span class="line">                        <span class="attr">"description"</span>:<span class="string">"score(freq=10.0), product of:"</span>,</span><br><span class="line">                        <span class="attr">"details"</span>:[</span><br><span class="line">                            &#123;</span><br><span class="line">                                <span class="attr">"value"</span>:<span class="number">2.2</span>,</span><br><span class="line">                                <span class="attr">"description"</span>:<span class="string">"boost"</span>,</span><br><span class="line">                                <span class="attr">"details"</span>:[</span><br><span class="line"></span><br><span class="line">                                ]</span><br><span class="line">                            &#125;,</span><br><span class="line">                            &#123;</span><br><span class="line">                                <span class="attr">"value"</span>:<span class="number">2.4871316</span>,</span><br><span class="line">                                <span class="attr">"description"</span>:<span class="string">"idf, computed as log(1 + (N - n + 0.5) / (n + 0.5)) from:"</span>,</span><br><span class="line">                                <span class="attr">"details"</span>:[</span><br><span class="line">                                    &#123;</span><br><span class="line">                                        <span class="attr">"value"</span>:<span class="number">860</span>,</span><br><span class="line">                                        <span class="attr">"description"</span>:<span class="string">"n, number of documents containing term"</span>,</span><br><span class="line">                                        <span class="attr">"details"</span>:[</span><br><span class="line"></span><br><span class="line">                                        ]</span><br><span class="line">                                    &#125;,</span><br><span class="line">                                    &#123;</span><br><span class="line">                                        <span class="attr">"value"</span>:<span class="number">10348</span>,</span><br><span class="line">                                        <span class="attr">"description"</span>:<span class="string">"N, total number of documents with field"</span>,</span><br><span class="line">                                        <span class="attr">"details"</span>:[</span><br><span class="line"></span><br><span class="line">                                        ]</span><br><span class="line">                                    &#125;</span><br><span class="line">                                ]</span><br><span class="line">                            &#125;,</span><br><span class="line">                            &#123;</span><br><span class="line">                                <span class="attr">"value"</span>:<span class="number">0.6487705</span>,</span><br><span class="line">                                <span class="attr">"description"</span>:<span class="string">"tf, computed as freq / (freq + k1 * (1 - b + b * dl / avgdl)) from:"</span>,</span><br><span class="line">                                <span class="attr">"details"</span>:[</span><br><span class="line">                                    &#123;</span><br><span class="line">                                        <span class="attr">"value"</span>:<span class="number">10</span>,</span><br><span class="line">                                        <span class="attr">"description"</span>:<span class="string">"freq, occurrences of term within document"</span>,</span><br><span class="line">                                        <span class="attr">"details"</span>:[</span><br><span class="line"></span><br><span class="line">                                        ]</span><br><span class="line">                                    &#125;,</span><br><span class="line">                                    &#123;</span><br><span class="line">                                        <span class="attr">"value"</span>:<span class="number">1.2</span>,</span><br><span class="line">                                        <span class="attr">"description"</span>:<span class="string">"k1, term saturation parameter"</span>,</span><br><span class="line">                                        <span class="attr">"details"</span>:[</span><br><span class="line"></span><br><span class="line">                                        ]</span><br><span class="line">                                    &#125;,</span><br><span class="line">                                    &#123;</span><br><span class="line">                                        <span class="attr">"value"</span>:<span class="number">0.75</span>,</span><br><span class="line">                                        <span class="attr">"description"</span>:<span class="string">"b, length normalization parameter"</span>,</span><br><span class="line">                                        <span class="attr">"details"</span>:[</span><br><span class="line"></span><br><span class="line">                                        ]</span><br><span class="line">                                    &#125;,</span><br><span class="line">                                    &#123;</span><br><span class="line">                                        <span class="attr">"value"</span>:<span class="number">25</span>,</span><br><span class="line">                                        <span class="attr">"description"</span>:<span class="string">"dl, length of field"</span>,</span><br><span class="line">                                        <span class="attr">"details"</span>:[</span><br><span class="line"></span><br><span class="line">                                        ]</span><br><span class="line">                                    &#125;,</span><br><span class="line">                                    &#123;</span><br><span class="line">                                        <span class="attr">"value"</span>:<span class="number">4.399884</span>,</span><br><span class="line">                                        <span class="attr">"description"</span>:<span class="string">"avgdl, average length of field"</span>,</span><br><span class="line">                                        <span class="attr">"details"</span>:[</span><br><span class="line"></span><br><span class="line">                                        ]</span><br><span class="line">                                    &#125;</span><br><span class="line">                                ]</span><br><span class="line">                            &#125;</span><br><span class="line">                        ]</span><br><span class="line">                    &#125;</span><br><span class="line">                ]</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">"value"</span>:<span class="number">3.5632021</span>,</span><br><span class="line">                <span class="attr">"description"</span>:<span class="string">"weight(description:试 in 325) [PerFieldSimilarity], result of:"</span>,</span><br><span class="line">                <span class="attr">"details"</span>:[</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">"value"</span>:<span class="number">3.5632021</span>,</span><br><span class="line">                        <span class="attr">"description"</span>:<span class="string">"score(freq=10.0), product of:"</span>,</span><br><span class="line">                        <span class="attr">"details"</span>:[</span><br><span class="line">                            &#123;</span><br><span class="line">                                <span class="attr">"value"</span>:<span class="number">2.2</span>,</span><br><span class="line">                                <span class="attr">"description"</span>:<span class="string">"boost"</span>,</span><br><span class="line">                                <span class="attr">"details"</span>:[</span><br><span class="line"></span><br><span class="line">                                ]</span><br><span class="line">                            &#125;,</span><br><span class="line">                            &#123;</span><br><span class="line">                                <span class="attr">"value"</span>:<span class="number">2.496472</span>,</span><br><span class="line">                                <span class="attr">"description"</span>:<span class="string">"idf, computed as log(1 + (N - n + 0.5) / (n + 0.5)) from:"</span>,</span><br><span class="line">                                <span class="attr">"details"</span>:[</span><br><span class="line">                                    &#123;</span><br><span class="line">                                        <span class="attr">"value"</span>:<span class="number">852</span>,</span><br><span class="line">                                        <span class="attr">"description"</span>:<span class="string">"n, number of documents containing term"</span>,</span><br><span class="line">                                        <span class="attr">"details"</span>:[</span><br><span class="line"></span><br><span class="line">                                        ]</span><br><span class="line">                                    &#125;,</span><br><span class="line">                                    &#123;</span><br><span class="line">                                        <span class="attr">"value"</span>:<span class="number">10348</span>,</span><br><span class="line">                                        <span class="attr">"description"</span>:<span class="string">"N, total number of documents with field"</span>,</span><br><span class="line">                                        <span class="attr">"details"</span>:[</span><br><span class="line"></span><br><span class="line">                                        ]</span><br><span class="line">                                    &#125;</span><br><span class="line">                                ]</span><br><span class="line">                            &#125;,</span><br><span class="line">                            &#123;</span><br><span class="line">                                <span class="attr">"value"</span>:<span class="number">0.6487705</span>,</span><br><span class="line">                                <span class="attr">"description"</span>:<span class="string">"tf, computed as freq / (freq + k1 * (1 - b + b * dl / avgdl)) from:"</span>,</span><br><span class="line">                                <span class="attr">"details"</span>:[</span><br><span class="line">                                    &#123;</span><br><span class="line">                                        <span class="attr">"value"</span>:<span class="number">10</span>,</span><br><span class="line">                                        <span class="attr">"description"</span>:<span class="string">"freq, occurrences of term within document"</span>,</span><br><span class="line">                                        <span class="attr">"details"</span>:[</span><br><span class="line"></span><br><span class="line">                                        ]</span><br><span class="line">                                    &#125;,</span><br><span class="line">                                    &#123;</span><br><span class="line">                                        <span class="attr">"value"</span>:<span class="number">1.2</span>,</span><br><span class="line">                                        <span class="attr">"description"</span>:<span class="string">"k1, term saturation parameter"</span>,</span><br><span class="line">                                        <span class="attr">"details"</span>:[</span><br><span class="line"></span><br><span class="line">                                        ]</span><br><span class="line">                                    &#125;,</span><br><span class="line">                                    &#123;</span><br><span class="line">                                        <span class="attr">"value"</span>:<span class="number">0.75</span>,</span><br><span class="line">                                        <span class="attr">"description"</span>:<span class="string">"b, length normalization parameter"</span>,</span><br><span class="line">                                        <span class="attr">"details"</span>:[</span><br><span class="line"></span><br><span class="line">                                        ]</span><br><span class="line">                                    &#125;,</span><br><span class="line">                                    &#123;</span><br><span class="line">                                        <span class="attr">"value"</span>:<span class="number">25</span>,</span><br><span class="line">                                        <span class="attr">"description"</span>:<span class="string">"dl, length of field"</span>,</span><br><span class="line">                                        <span class="attr">"details"</span>:[</span><br><span class="line"></span><br><span class="line">                                        ]</span><br><span class="line">                                    &#125;,</span><br><span class="line">                                    &#123;</span><br><span class="line">                                        <span class="attr">"value"</span>:<span class="number">4.399884</span>,</span><br><span class="line">                                        <span class="attr">"description"</span>:<span class="string">"avgdl, average length of field"</span>,</span><br><span class="line">                                        <span class="attr">"details"</span>:[</span><br><span class="line"></span><br><span class="line">                                        ]</span><br><span class="line">                                    &#125;</span><br><span class="line">                                ]</span><br><span class="line">                            &#125;</span><br><span class="line">                        ]</span><br><span class="line">                    &#125;</span><br><span class="line">                ]</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;一、查看分数组成&quot;&gt;&lt;a href=&quot;#一、查看分数组成&quot; class=&quot;headerlink&quot; title=&quot;一、查看分数组成&quot;&gt;&lt;/a&gt;一、查看分数组成&lt;/h2&gt;&lt;p&gt;通过修改dsl 可以查看到文档的最终得分以及计算方法，如下:&lt;/p&gt;
&lt;figure cla
      
    
    </summary>
    
    
      <category term="elasticsearch" scheme="https://willky.github.io/tags/elasticsearch/"/>
    
      <category term="es" scheme="https://willky.github.io/tags/es/"/>
    
      <category term="score" scheme="https://willky.github.io/tags/score/"/>
    
  </entry>
  
  <entry>
    <title>ES查询返回total为10000</title>
    <link href="https://willky.github.io/2020/07/27/ES%E6%9F%A5%E8%AF%A2%E8%BF%94%E5%9B%9Etotal%E4%B8%BA10000/"/>
    <id>https://willky.github.io/2020/07/27/ES查询返回total为10000/</id>
    <published>2020-07-26T16:06:55.000Z</published>
    <updated>2020-07-26T16:19:31.552Z</updated>
    
    <content type="html"><![CDATA[<p>elasticsearch 7.0 默认搜索的时候返回命中总条数为10000, 当我们做业务的时候可能需要用这个数据去做导出或者分页总数据时，这个数据会给我们带来一些困扰。<br>如果需要返回所有命中条数，需要添加一个参数<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">"track_total_hits" : true</span><br></pre></td></tr></table></figure></p><p>完整的语法如下:<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">GET you_index/_search</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">"track_total_hits"</span>: <span class="literal">true</span>,</span><br><span class="line">     <span class="attr">"query"</span>: &#123;</span><br><span class="line">        <span class="attr">"match"</span> : &#123;</span><br><span class="line">            <span class="attr">"message"</span> : <span class="string">"Elasticsearch"</span></span><br><span class="line">        &#125;</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>如果设置了 track_total_hits 为true， 也意味放放弃一部份性能问题。<br>官方解释如下:</p><p>Track total hits<br>Generally the total hit count can’t be computed accurately without visiting all matches, which is costly for queries that match lots of documents. The track_total_hits parameter allows you to control how the total number of hits should be tracked. Given that it is often enough to have a lower bound of the number of hits, such as “there are at least 10000 hits”, the default is set to 10,000. This means that requests will count the total hit accurately up to 10,000 hits. It’s is a good trade off to speed up searches if you don’t need the accurate number of hits after a certain threshold.</p><p>When set to true the search response will always track the number of hits that match the query accurately (e.g. total.relation will always be equal to “eq” when track_total_hits is set to true). Otherwise the “total.relation” returned in the “total” object in the search response determines how the “total.value” should be interpreted. A value of “gte” means that the “total.value” is a lower bound of the total hits that match the query and a value of “eq” indicates that “total.value” is the accurate count.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;elasticsearch 7.0 默认搜索的时候返回命中总条数为10000, 当我们做业务的时候可能需要用这个数据去做导出或者分页总数据时，这个数据会给我们带来一些困扰。&lt;br&gt;如果需要返回所有命中条数，需要添加一个参数&lt;br&gt;&lt;figure class=&quot;highlig
      
    
    </summary>
    
    
      <category term="elasticsearch" scheme="https://willky.github.io/tags/elasticsearch/"/>
    
      <category term="track_total_hits" scheme="https://willky.github.io/tags/track-total-hits/"/>
    
  </entry>
  
  <entry>
    <title>laravel中使用redis哨兵模式</title>
    <link href="https://willky.github.io/2019/05/08/laravel%E4%B8%AD%E4%BD%BF%E7%94%A8redis%E5%93%A8%E5%85%B5%E6%A8%A1%E5%BC%8F/"/>
    <id>https://willky.github.io/2019/05/08/laravel中使用redis哨兵模式/</id>
    <published>2019-05-08T10:37:46.000Z</published>
    <updated>2020-12-09T16:20:33.874Z</updated>
    
    <content type="html"><![CDATA[<h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><p>博主使用的laravel 版本是 5.6, 所有以下代码可以使用在laravel 5.6 版本中，其他版本应该也可以使用，未经过测试</p><h1 id="代码配置"><a href="#代码配置" class="headerlink" title="代码配置"></a>代码配置</h1><p>修改database.php 配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">$redis = [</span><br><span class="line">     &apos;tcp://192.168.1.207:26379&apos;</span><br><span class="line">      &apos;tcp://192.168.1.225:26381&apos;</span><br><span class="line">     &apos;tcp://192.168.1.209:26380&apos;</span><br><span class="line">        &apos;options&apos; =&gt; [</span><br><span class="line">            &apos;replication&apos; =&gt; &apos;sentinel&apos;,</span><br><span class="line">            &apos;service&apos;     =&gt; env(&apos;REDIS_SENTINEL_SERVICE&apos;, &apos;mymaster&apos;),    //sentinel</span><br><span class="line">            &apos;parameters&apos;  =&gt; [</span><br><span class="line">                &apos;password&apos; =&gt; null,</span><br><span class="line">                &apos;database&apos; =&gt; 0,</span><br><span class="line">            ],</span><br><span class="line">        ],</span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">&apos;redis&apos; =&gt; [</span><br><span class="line">        &apos;options&apos; =&gt; [</span><br><span class="line">            &apos;prefix&apos; =&gt; &apos;laravel&apos;,</span><br><span class="line">        ],</span><br><span class="line">        &apos;client&apos; =&gt; &apos;predis&apos;,</span><br><span class="line">        &apos;default&apos; =&gt; $redis,</span><br><span class="line">        &apos;queue&apos;   =&gt; $redis</span><br><span class="line">      ]</span><br><span class="line">    ],</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h1&gt;&lt;p&gt;博主使用的laravel 版本是 5.6, 所有以下代码可以使用在laravel 5.6 版本中，其他版本应该也可以使用，未经过测试&lt;/p&gt;
      
    
    </summary>
    
    
      <category term="laravel" scheme="https://willky.github.io/tags/laravel/"/>
    
      <category term="redis" scheme="https://willky.github.io/tags/redis/"/>
    
      <category term="集群" scheme="https://willky.github.io/tags/%E9%9B%86%E7%BE%A4/"/>
    
  </entry>
  
  <entry>
    <title>laravel中使用swoole加速你的应用</title>
    <link href="https://willky.github.io/2019/03/08/laravel-swoole/"/>
    <id>https://willky.github.io/2019/03/08/laravel-swoole/</id>
    <published>2019-03-08T04:47:46.000Z</published>
    <updated>2019-08-10T08:41:20.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><ul><li>博主使用的laravel 版本是 5.6, 所有以下代码可以使用在laravel 5.6 版本中，其他版本应该也可以使用，未经过测试</li><li>php 7.2</li><li>swoole 4.0 +</li></ul><h1 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h1><p>先使用composer 把我们需要使用的插件库导进来<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer require swooletw/laravel-swoole</span><br></pre></td></tr></table></figure></p><h1 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h1><p>打开app.php 配置文件，把<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SwooleTW\Http\LaravelServiceProvider::class,</span><br></pre></td></tr></table></figure></p><p>添加到 providers 中</p><h1 id="生成swoole-配置文件"><a href="#生成swoole-配置文件" class="headerlink" title="生成swoole 配置文件"></a>生成swoole 配置文件</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan vendor:publish --tag=laravel-swoole</span><br></pre></td></tr></table></figure><p>执行完命令后，我们看到config 文件夹下多了两个文件，如果我们没有使用socket的话，只需要修改swoole-http.php 文件即可. 具体需要修改哪个配置可根据自己的服务器配置去调整</p><h1 id="启动服务，测试"><a href="#启动服务，测试" class="headerlink" title="启动服务，测试"></a>启动服务，测试</h1><p>执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan swoole:http start</span><br></pre></td></tr></table></figure></p><p>此处可以看到控制台把服务器给启动了，把链接复制到浏览器即可使用</p><h1 id="swoole-服务命令"><a href="#swoole-服务命令" class="headerlink" title="swoole 服务命令"></a>swoole 服务命令</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">php artisan swoole:http start //开启http服务</span><br><span class="line">php artisan swoole:http stop  //停止</span><br><span class="line">php artisan swoole:http restart  //重新启动</span><br><span class="line">php artisan swoole:http reload  //热重载，好像并没有什么卵用，测试发现并不是所有的代码都能热重载的</span><br><span class="line">php artisan swoole:http infos  //运行信息</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;博主使用的laravel 版本是 5.6, 所有以下代码可以使用在laravel 5.6 版本中，其他版本应该也可以使用，未经过
      
    
    </summary>
    
    
      <category term="laravel" scheme="https://willky.github.io/tags/laravel/"/>
    
      <category term="redis" scheme="https://willky.github.io/tags/redis/"/>
    
      <category term="集群" scheme="https://willky.github.io/tags/%E9%9B%86%E7%BE%A4/"/>
    
  </entry>
  
  <entry>
    <title>关于我</title>
    <link href="https://willky.github.io/2014/03/01/about/"/>
    <id>https://willky.github.io/2014/03/01/about/</id>
    <published>2014-03-01T10:07:47.000Z</published>
    <updated>2020-12-09T16:25:55.346Z</updated>
    
    <content type="html"><![CDATA[<h1 id="技术领域"><a href="#技术领域" class="headerlink" title="技术领域"></a>技术领域</h1><ul><li>PHP</li><li>java</li><li>Elastic Search</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;技术领域&quot;&gt;&lt;a href=&quot;#技术领域&quot; class=&quot;headerlink&quot; title=&quot;技术领域&quot;&gt;&lt;/a&gt;技术领域&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;PHP&lt;/li&gt;
&lt;li&gt;java&lt;/li&gt;
&lt;li&gt;Elastic Search&lt;/li&gt;
&lt;/ul&gt;

      
    
    </summary>
    
    
      <category term="手哥" scheme="https://willky.github.io/tags/%E6%89%8B%E5%93%A5/"/>
    
  </entry>
  
</feed>
